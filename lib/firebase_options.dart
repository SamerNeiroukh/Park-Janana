// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart' show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    print("firebase logs: Determining platform-specific Firebase options");
    if (kIsWeb) {
      print("firebase logs: Using web Firebase options");
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        print("firebase logs: Using Android Firebase options");
        return android;
      case TargetPlatform.iOS:
        print("firebase logs: Using iOS Firebase options");
        return ios;
      case TargetPlatform.macOS:
        print("firebase logs: Using macOS Firebase options");
        return macos;
      case TargetPlatform.windows:
        print("firebase logs: Using Windows Firebase options");
        return windows;
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static const FirebaseOptions web = FirebaseOptions(
    apiKey: 'AIzaSyCTggsjNnM8EcIf_PuvW1SfFpnIJY5Na9E',
    appId: '1:591611847814:web:adeb7186eeca9412d95d07',
    messagingSenderId: '591611847814',
    projectId: 'park-janana',
    authDomain: 'park-janana.firebaseapp.com',
    storageBucket: 'park-janana.firebasestorage.app',
    measurementId: 'G-Y4KLLGVRB7',
  );

  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyDhj896B7LW87PykUHRtfs6pOgj4JGs6PM',
    appId: '1:591611847814:android:28e6778d1857b492d95d07',
    messagingSenderId: '591611847814',
    projectId: 'park-janana',
    storageBucket: 'park-janana.firebasestorage.app',
  );

  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyARANzCKVj8zt2e4AWhkBsci7RnMM73xvo',
    appId: '1:591611847814:ios:3081b27d59082757d95d07',
    messagingSenderId: '591611847814',
    projectId: 'park-janana',
    storageBucket: 'park-janana.firebasestorage.app',
    iosBundleId: 'com.example.parkJanana',
  );

  static const FirebaseOptions macos = FirebaseOptions(
    apiKey: 'AIzaSyARANzCKVj8zt2e4AWhkBsci7RnMM73xvo',
    appId: '1:591611847814:ios:3081b27d59082757d95d07',
    messagingSenderId: '591611847814',
    projectId: 'park-janana',
    storageBucket: 'park-janana.firebasestorage.app',
    iosBundleId: 'com.example.parkJanana',
  );

  static const FirebaseOptions windows = FirebaseOptions(
    apiKey: 'AIzaSyCTggsjNnM8EcIf_PuvW1SfFpnIJY5Na9E',
    appId: '1:591611847814:web:be6df1cdd7d7d3c7d95d07',
    messagingSenderId: '591611847814',
    projectId: 'park-janana',
    authDomain: 'park-janana.firebaseapp.com',
    storageBucket: 'park-janana.firebasestorage.app',
    measurementId: 'G-SYW951WM0H',
  );
}
